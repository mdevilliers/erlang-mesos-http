%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.19.0 on {{2016,7,29},{18,45,7}}

-ifndef(mesos_pb).
-define(mesos_pb, true).

-define(mesos_pb_gpb_version, "3.19.0").

-ifndef('MESOS.V1.VERSIONINFO_PB_H').
-define('MESOS.V1.VERSIONINFO_PB_H', true).
-record('mesos.v1.VersionInfo',
        {version,                       % = 1, string
         build_date,                    % = 2, string (optional)
         build_time,                    % = 3, double (optional)
         build_user,                    % = 4, string (optional)
         git_sha,                       % = 5, string (optional)
         git_branch,                    % = 6, string (optional)
         git_tag                        % = 7, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.CREDENTIAL_PB_H').
-define('MESOS.V1.CREDENTIAL_PB_H', true).
-record('mesos.v1.Credential',
        {principal,                     % = 1, string
         secret                         % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.IMAGE.DOCKER_PB_H').
-define('MESOS.V1.IMAGE.DOCKER_PB_H', true).
-record('mesos.v1.Image.Docker',
        {name,                          % = 1, string
         credential                     % = 2, {msg,'mesos.v1.Credential'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.LABEL_PB_H').
-define('MESOS.V1.LABEL_PB_H', true).
-record('mesos.v1.Label',
        {key,                           % = 1, string
         value                          % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.LABELS_PB_H').
-define('MESOS.V1.LABELS_PB_H', true).
-record('mesos.v1.Labels',
        {labels = []                    % = 1, [{msg,'mesos.v1.Label'}]
        }).
-endif.

-ifndef('MESOS.V1.IMAGE.APPC_PB_H').
-define('MESOS.V1.IMAGE.APPC_PB_H', true).
-record('mesos.v1.Image.Appc',
        {name,                          % = 1, string
         id,                            % = 2, string (optional)
         labels                         % = 3, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.IMAGE_PB_H').
-define('MESOS.V1.IMAGE_PB_H', true).
-record('mesos.v1.Image',
        {type,                          % = 1, {enum,'mesos.v1.Image.Type'}
         appc,                          % = 2, {msg,'mesos.v1.Image.Appc'} (optional)
         docker,                        % = 3, {msg,'mesos.v1.Image.Docker'} (optional)
         cached = true                  % = 4, bool (optional)
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERINFO.MESOSINFO_PB_H').
-define('MESOS.V1.CONTAINERINFO.MESOSINFO_PB_H', true).
-record('mesos.v1.ContainerInfo.MesosInfo',
        {image                          % = 1, {msg,'mesos.v1.Image'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CAPABILITYINFO_PB_H').
-define('MESOS.V1.CAPABILITYINFO_PB_H', true).
-record('mesos.v1.CapabilityInfo',
        {capabilities = []              % = 1, [{enum,'mesos.v1.CapabilityInfo.Capability'}]
        }).
-endif.

-ifndef('MESOS.V1.LINUXINFO_PB_H').
-define('MESOS.V1.LINUXINFO_PB_H', true).
-record('mesos.v1.LinuxInfo',
        {capability_info                % = 1, {msg,'mesos.v1.CapabilityInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.NETWORKINFO.IPADDRESS_PB_H').
-define('MESOS.V1.NETWORKINFO.IPADDRESS_PB_H', true).
-record('mesos.v1.NetworkInfo.IPAddress',
        {protocol,                      % = 1, {enum,'mesos.v1.NetworkInfo.Protocol'} (optional)
         ip_address                     % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.NETWORKINFO_PB_H').
-define('MESOS.V1.NETWORKINFO_PB_H', true).
-record('mesos.v1.NetworkInfo',
        {ip_addresses = [],             % = 5, [{msg,'mesos.v1.NetworkInfo.IPAddress'}]
         name,                          % = 6, string (optional)
         groups = [],                   % = 3, [string]
         labels                         % = 4, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.PARAMETER_PB_H').
-define('MESOS.V1.PARAMETER_PB_H', true).
-record('mesos.v1.Parameter',
        {key,                           % = 1, string
         value                          % = 2, string
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERINFO.DOCKERINFO.PORTMAPPING_PB_H').
-define('MESOS.V1.CONTAINERINFO.DOCKERINFO.PORTMAPPING_PB_H', true).
-record('mesos.v1.ContainerInfo.DockerInfo.PortMapping',
        {host_port,                     % = 1, uint32
         container_port,                % = 2, uint32
         protocol                       % = 3, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERINFO.DOCKERINFO_PB_H').
-define('MESOS.V1.CONTAINERINFO.DOCKERINFO_PB_H', true).
-record('mesos.v1.ContainerInfo.DockerInfo',
        {image,                         % = 1, string
         network = 'HOST',              % = 2, {enum,'mesos.v1.ContainerInfo.DockerInfo.Network'} (optional)
         port_mappings = [],            % = 3, [{msg,'mesos.v1.ContainerInfo.DockerInfo.PortMapping'}]
         privileged = false,            % = 4, bool (optional)
         parameters = [],               % = 5, [{msg,'mesos.v1.Parameter'}]
         force_pull_image,              % = 6, bool (optional)
         volume_driver                  % = 7, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.PARAMETERS_PB_H').
-define('MESOS.V1.PARAMETERS_PB_H', true).
-record('mesos.v1.Parameters',
        {parameter = []                 % = 1, [{msg,'mesos.v1.Parameter'}]
        }).
-endif.

-ifndef('MESOS.V1.VOLUME.SOURCE.DOCKERVOLUME_PB_H').
-define('MESOS.V1.VOLUME.SOURCE.DOCKERVOLUME_PB_H', true).
-record('mesos.v1.Volume.Source.DockerVolume',
        {driver,                        % = 1, string (optional)
         name,                          % = 2, string
         driver_options                 % = 3, {msg,'mesos.v1.Parameters'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.VOLUME.SOURCE_PB_H').
-define('MESOS.V1.VOLUME.SOURCE_PB_H', true).
-record('mesos.v1.Volume.Source',
        {type,                          % = 1, {enum,'mesos.v1.Volume.Source.Type'} (optional)
         docker_volume                  % = 2, {msg,'mesos.v1.Volume.Source.DockerVolume'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.VOLUME_PB_H').
-define('MESOS.V1.VOLUME_PB_H', true).
-record('mesos.v1.Volume',
        {mode,                          % = 3, {enum,'mesos.v1.Volume.Mode'}
         container_path,                % = 1, string
         host_path,                     % = 2, string (optional)
         image,                         % = 4, {msg,'mesos.v1.Image'} (optional)
         source                         % = 5, {msg,'mesos.v1.Volume.Source'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERINFO_PB_H').
-define('MESOS.V1.CONTAINERINFO_PB_H', true).
-record('mesos.v1.ContainerInfo',
        {type,                          % = 1, {enum,'mesos.v1.ContainerInfo.Type'}
         volumes = [],                  % = 2, [{msg,'mesos.v1.Volume'}]
         hostname,                      % = 4, string (optional)
         docker,                        % = 3, {msg,'mesos.v1.ContainerInfo.DockerInfo'} (optional)
         mesos,                         % = 5, {msg,'mesos.v1.ContainerInfo.MesosInfo'} (optional)
         network_infos = [],            % = 7, [{msg,'mesos.v1.NetworkInfo'}]
         linux_info                     % = 8, {msg,'mesos.v1.LinuxInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CGROUPINFO.NETCLS_PB_H').
-define('MESOS.V1.CGROUPINFO.NETCLS_PB_H', true).
-record('mesos.v1.CgroupInfo.NetCls',
        {classid                        % = 1, uint32 (optional)
        }).
-endif.

-ifndef('MESOS.V1.CGROUPINFO_PB_H').
-define('MESOS.V1.CGROUPINFO_PB_H', true).
-record('mesos.v1.CgroupInfo',
        {net_cls                        % = 1, {msg,'mesos.v1.CgroupInfo.NetCls'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.AGENTID_PB_H').
-define('MESOS.V1.AGENTID_PB_H', true).
-record('mesos.v1.AgentID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.VALUE.TEXT_PB_H').
-define('MESOS.V1.VALUE.TEXT_PB_H', true).
-record('mesos.v1.Value.Text',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.VALUE.SET_PB_H').
-define('MESOS.V1.VALUE.SET_PB_H', true).
-record('mesos.v1.Value.Set',
        {item = []                      % = 1, [string]
        }).
-endif.

-ifndef('MESOS.V1.VALUE.RANGE_PB_H').
-define('MESOS.V1.VALUE.RANGE_PB_H', true).
-record('mesos.v1.Value.Range',
        {'begin',                       % = 1, uint64
         'end'                          % = 2, uint64
        }).
-endif.

-ifndef('MESOS.V1.VALUE.RANGES_PB_H').
-define('MESOS.V1.VALUE.RANGES_PB_H', true).
-record('mesos.v1.Value.Ranges',
        {range = []                     % = 1, [{msg,'mesos.v1.Value.Range'}]
        }).
-endif.

-ifndef('MESOS.V1.VALUE.SCALAR_PB_H').
-define('MESOS.V1.VALUE.SCALAR_PB_H', true).
-record('mesos.v1.Value.Scalar',
        {value                          % = 1, double
        }).
-endif.

-ifndef('MESOS.V1.ATTRIBUTE_PB_H').
-define('MESOS.V1.ATTRIBUTE_PB_H', true).
-record('mesos.v1.Attribute',
        {name,                          % = 1, string
         type,                          % = 2, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 3, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 4, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 6, {msg,'mesos.v1.Value.Set'} (optional)
         text                           % = 5, {msg,'mesos.v1.Value.Text'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.SHAREDINFO_PB_H').
-define('MESOS.V1.RESOURCE.SHAREDINFO_PB_H', true).
-record('mesos.v1.Resource.SharedInfo',
        {
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.REVOCABLEINFO_PB_H').
-define('MESOS.V1.RESOURCE.REVOCABLEINFO_PB_H', true).
-record('mesos.v1.Resource.RevocableInfo',
        {
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.DISKINFO.SOURCE.MOUNT_PB_H').
-define('MESOS.V1.RESOURCE.DISKINFO.SOURCE.MOUNT_PB_H', true).
-record('mesos.v1.Resource.DiskInfo.Source.Mount',
        {root                           % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.DISKINFO.SOURCE.PATH_PB_H').
-define('MESOS.V1.RESOURCE.DISKINFO.SOURCE.PATH_PB_H', true).
-record('mesos.v1.Resource.DiskInfo.Source.Path',
        {root                           % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.DISKINFO.SOURCE_PB_H').
-define('MESOS.V1.RESOURCE.DISKINFO.SOURCE_PB_H', true).
-record('mesos.v1.Resource.DiskInfo.Source',
        {type,                          % = 1, {enum,'mesos.v1.Resource.DiskInfo.Source.Type'}
         path,                          % = 2, {msg,'mesos.v1.Resource.DiskInfo.Source.Path'} (optional)
         mount                          % = 3, {msg,'mesos.v1.Resource.DiskInfo.Source.Mount'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.DISKINFO.PERSISTENCE_PB_H').
-define('MESOS.V1.RESOURCE.DISKINFO.PERSISTENCE_PB_H', true).
-record('mesos.v1.Resource.DiskInfo.Persistence',
        {id,                            % = 1, string
         principal                      % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.DISKINFO_PB_H').
-define('MESOS.V1.RESOURCE.DISKINFO_PB_H', true).
-record('mesos.v1.Resource.DiskInfo',
        {persistence,                   % = 1, {msg,'mesos.v1.Resource.DiskInfo.Persistence'} (optional)
         volume,                        % = 2, {msg,'mesos.v1.Volume'} (optional)
         source                         % = 3, {msg,'mesos.v1.Resource.DiskInfo.Source'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE.RESERVATIONINFO_PB_H').
-define('MESOS.V1.RESOURCE.RESERVATIONINFO_PB_H', true).
-record('mesos.v1.Resource.ReservationInfo',
        {principal,                     % = 1, string (optional)
         labels                         % = 2, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCE_PB_H').
-define('MESOS.V1.RESOURCE_PB_H', true).
-record('mesos.v1.Resource',
        {name,                          % = 1, string
         type,                          % = 2, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 3, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 4, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 5, {msg,'mesos.v1.Value.Set'} (optional)
         role = "*",                    % = 6, string (optional)
         reservation,                   % = 8, {msg,'mesos.v1.Resource.ReservationInfo'} (optional)
         disk,                          % = 7, {msg,'mesos.v1.Resource.DiskInfo'} (optional)
         revocable,                     % = 9, {msg,'mesos.v1.Resource.RevocableInfo'} (optional)
         shared                         % = 10, {msg,'mesos.v1.Resource.SharedInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.AGENTINFO_PB_H').
-define('MESOS.V1.AGENTINFO_PB_H', true).
-record('mesos.v1.AgentInfo',
        {hostname,                      % = 1, string
         port = 5051,                   % = 8, int32 (optional)
         resources = [],                % = 3, [{msg,'mesos.v1.Resource'}]
         attributes = [],               % = 5, [{msg,'mesos.v1.Attribute'}]
         id                             % = 6, {msg,'mesos.v1.AgentID'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.PORT_PB_H').
-define('MESOS.V1.PORT_PB_H', true).
-record('mesos.v1.Port',
        {number,                        % = 1, uint32
         name,                          % = 2, string (optional)
         protocol,                      % = 3, string (optional)
         visibility,                    % = 4, {enum,'mesos.v1.DiscoveryInfo.Visibility'} (optional)
         labels                         % = 5, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.PORTS_PB_H').
-define('MESOS.V1.PORTS_PB_H', true).
-record('mesos.v1.Ports',
        {ports = []                     % = 1, [{msg,'mesos.v1.Port'}]
        }).
-endif.

-ifndef('MESOS.V1.DISCOVERYINFO_PB_H').
-define('MESOS.V1.DISCOVERYINFO_PB_H', true).
-record('mesos.v1.DiscoveryInfo',
        {visibility,                    % = 1, {enum,'mesos.v1.DiscoveryInfo.Visibility'}
         name,                          % = 2, string (optional)
         environment,                   % = 3, string (optional)
         location,                      % = 4, string (optional)
         version,                       % = 5, string (optional)
         ports,                         % = 6, {msg,'mesos.v1.Ports'} (optional)
         labels                         % = 7, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERSTATUS_PB_H').
-define('MESOS.V1.CONTAINERSTATUS_PB_H', true).
-record('mesos.v1.ContainerStatus',
        {network_infos = [],            % = 1, [{msg,'mesos.v1.NetworkInfo'}]
         cgroup_info,                   % = 2, {msg,'mesos.v1.CgroupInfo'} (optional)
         executor_pid                   % = 3, uint32 (optional)
        }).
-endif.

-ifndef('MESOS.V1.EXECUTORID_PB_H').
-define('MESOS.V1.EXECUTORID_PB_H', true).
-record('mesos.v1.ExecutorID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.TASKID_PB_H').
-define('MESOS.V1.TASKID_PB_H', true).
-record('mesos.v1.TaskID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.TASKSTATUS_PB_H').
-define('MESOS.V1.TASKSTATUS_PB_H', true).
-record('mesos.v1.TaskStatus',
        {task_id,                       % = 1, {msg,'mesos.v1.TaskID'}
         state,                         % = 2, {enum,'mesos.v1.TaskState'}
         message,                       % = 4, string (optional)
         source,                        % = 9, {enum,'mesos.v1.TaskStatus.Source'} (optional)
         reason,                        % = 10, {enum,'mesos.v1.TaskStatus.Reason'} (optional)
         data,                          % = 3, bytes (optional)
         agent_id,                      % = 5, {msg,'mesos.v1.AgentID'} (optional)
         executor_id,                   % = 7, {msg,'mesos.v1.ExecutorID'} (optional)
         timestamp,                     % = 6, double (optional)
         uuid,                          % = 11, bytes (optional)
         healthy,                       % = 8, bool (optional)
         labels,                        % = 12, {msg,'mesos.v1.Labels'} (optional)
         container_status               % = 13, {msg,'mesos.v1.ContainerStatus'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.FRAMEWORKID_PB_H').
-define('MESOS.V1.FRAMEWORKID_PB_H', true).
-record('mesos.v1.FrameworkID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.TASK_PB_H').
-define('MESOS.V1.TASK_PB_H', true).
-record('mesos.v1.Task',
        {name,                          % = 1, string
         task_id,                       % = 2, {msg,'mesos.v1.TaskID'}
         framework_id,                  % = 3, {msg,'mesos.v1.FrameworkID'}
         executor_id,                   % = 4, {msg,'mesos.v1.ExecutorID'} (optional)
         agent_id,                      % = 5, {msg,'mesos.v1.AgentID'}
         state,                         % = 6, {enum,'mesos.v1.TaskState'}
         resources = [],                % = 7, [{msg,'mesos.v1.Resource'}]
         statuses = [],                 % = 8, [{msg,'mesos.v1.TaskStatus'}]
         status_update_state,           % = 9, {enum,'mesos.v1.TaskState'} (optional)
         status_update_uuid,            % = 10, bytes (optional)
         labels,                        % = 11, {msg,'mesos.v1.Labels'} (optional)
         discovery,                     % = 12, {msg,'mesos.v1.DiscoveryInfo'} (optional)
         container,                     % = 13, {msg,'mesos.v1.ContainerInfo'} (optional)
         user                           % = 14, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION.DESTROY_PB_H').
-define('MESOS.V1.OFFER.OPERATION.DESTROY_PB_H', true).
-record('mesos.v1.Offer.Operation.Destroy',
        {volumes = []                   % = 1, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.DURATIONINFO_PB_H').
-define('MESOS.V1.DURATIONINFO_PB_H', true).
-record('mesos.v1.DurationInfo',
        {nanoseconds                    % = 1, int64
        }).
-endif.

-ifndef('MESOS.V1.KILLPOLICY_PB_H').
-define('MESOS.V1.KILLPOLICY_PB_H', true).
-record('mesos.v1.KillPolicy',
        {grace_period                   % = 1, {msg,'mesos.v1.DurationInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.TIMEINFO_PB_H').
-define('MESOS.V1.TIMEINFO_PB_H', true).
-record('mesos.v1.TimeInfo',
        {nanoseconds                    % = 1, int64
        }).
-endif.

-ifndef('MESOS.V1.UNAVAILABILITY_PB_H').
-define('MESOS.V1.UNAVAILABILITY_PB_H', true).
-record('mesos.v1.Unavailability',
        {start,                         % = 1, {msg,'mesos.v1.TimeInfo'}
         duration                       % = 2, {msg,'mesos.v1.DurationInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION.UNRESERVE_PB_H').
-define('MESOS.V1.OFFER.OPERATION.UNRESERVE_PB_H', true).
-record('mesos.v1.Offer.Operation.Unreserve',
        {resources = []                 % = 1, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.REQUEST_PB_H').
-define('MESOS.V1.REQUEST_PB_H', true).
-record('mesos.v1.Request',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'} (optional)
         resources = []                 % = 2, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.METRIC_PB_H').
-define('MESOS.V1.METRIC_PB_H', true).
-record('mesos.v1.Metric',
        {name,                          % = 1, string
         value                          % = 2, double (optional)
        }).
-endif.

-ifndef('MESOS.V1.UDPSTATISTICS_PB_H').
-define('MESOS.V1.UDPSTATISTICS_PB_H', true).
-record('mesos.v1.UdpStatistics',
        {'InDatagrams',                 % = 1, int64 (optional)
         'NoPorts',                     % = 2, int64 (optional)
         'InErrors',                    % = 3, int64 (optional)
         'OutDatagrams',                % = 4, int64 (optional)
         'RcvbufErrors',                % = 5, int64 (optional)
         'SndbufErrors',                % = 6, int64 (optional)
         'InCsumErrors',                % = 7, int64 (optional)
         'IgnoredMulti'                 % = 8, int64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.TCPSTATISTICS_PB_H').
-define('MESOS.V1.TCPSTATISTICS_PB_H', true).
-record('mesos.v1.TcpStatistics',
        {'RtoAlgorithm',                % = 1, int64 (optional)
         'RtoMin',                      % = 2, int64 (optional)
         'RtoMax',                      % = 3, int64 (optional)
         'MaxConn',                     % = 4, int64 (optional)
         'ActiveOpens',                 % = 5, int64 (optional)
         'PassiveOpens',                % = 6, int64 (optional)
         'AttemptFails',                % = 7, int64 (optional)
         'EstabResets',                 % = 8, int64 (optional)
         'CurrEstab',                   % = 9, int64 (optional)
         'InSegs',                      % = 10, int64 (optional)
         'OutSegs',                     % = 11, int64 (optional)
         'RetransSegs',                 % = 12, int64 (optional)
         'InErrs',                      % = 13, int64 (optional)
         'OutRsts',                     % = 14, int64 (optional)
         'InCsumErrors'                 % = 15, int64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.RATELIMIT_PB_H').
-define('MESOS.V1.RATELIMIT_PB_H', true).
-record('mesos.v1.RateLimit',
        {qps,                           % = 1, double (optional)
         principal,                     % = 2, string
         capacity                       % = 3, uint64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.RATELIMITS_PB_H').
-define('MESOS.V1.RATELIMITS_PB_H', true).
-record('mesos.v1.RateLimits',
        {limits = [],                   % = 1, [{msg,'mesos.v1.RateLimit'}]
         aggregate_default_qps,         % = 2, double (optional)
         aggregate_default_capacity     % = 3, uint64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.ADDRESS_PB_H').
-define('MESOS.V1.ADDRESS_PB_H', true).
-record('mesos.v1.Address',
        {hostname,                      % = 1, string (optional)
         ip,                            % = 2, string (optional)
         port                           % = 3, int32
        }).
-endif.

-ifndef('MESOS.V1.URL_PB_H').
-define('MESOS.V1.URL_PB_H', true).
-record('mesos.v1.URL',
        {scheme,                        % = 1, string
         address,                       % = 2, {msg,'mesos.v1.Address'}
         path,                          % = 3, string (optional)
         query = [],                    % = 4, [{msg,'mesos.v1.Parameter'}]
         fragment                       % = 5, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.OFFERID_PB_H').
-define('MESOS.V1.OFFERID_PB_H', true).
-record('mesos.v1.OfferID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.OFFER_PB_H').
-define('MESOS.V1.OFFER_PB_H', true).
-record('mesos.v1.Offer',
        {id,                            % = 1, {msg,'mesos.v1.OfferID'}
         framework_id,                  % = 2, {msg,'mesos.v1.FrameworkID'}
         agent_id,                      % = 3, {msg,'mesos.v1.AgentID'}
         hostname,                      % = 4, string
         url,                           % = 8, {msg,'mesos.v1.URL'} (optional)
         resources = [],                % = 5, [{msg,'mesos.v1.Resource'}]
         attributes = [],               % = 7, [{msg,'mesos.v1.Attribute'}]
         executor_ids = [],             % = 6, [{msg,'mesos.v1.ExecutorID'}]
         unavailability                 % = 9, {msg,'mesos.v1.Unavailability'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.FRAMEWORKINFO.CAPABILITY_PB_H').
-define('MESOS.V1.FRAMEWORKINFO.CAPABILITY_PB_H', true).
-record('mesos.v1.FrameworkInfo.Capability',
        {type                           % = 1, {enum,'mesos.v1.FrameworkInfo.Capability.Type'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.FRAMEWORKINFO_PB_H').
-define('MESOS.V1.FRAMEWORKINFO_PB_H', true).
-record('mesos.v1.FrameworkInfo',
        {user,                          % = 1, string
         name,                          % = 2, string
         id,                            % = 3, {msg,'mesos.v1.FrameworkID'} (optional)
         failover_timeout = 0.0,        % = 4, double (optional)
         checkpoint = false,            % = 5, bool (optional)
         role = "*",                    % = 6, string (optional)
         hostname,                      % = 7, string (optional)
         principal,                     % = 8, string (optional)
         webui_url,                     % = 9, string (optional)
         capabilities = [],             % = 10, [{msg,'mesos.v1.FrameworkInfo.Capability'}]
         labels                         % = 11, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.MACHINEID_PB_H').
-define('MESOS.V1.MACHINEID_PB_H', true).
-record('mesos.v1.MachineID',
        {hostname,                      % = 1, string (optional)
         ip                             % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.MACHINEINFO_PB_H').
-define('MESOS.V1.MACHINEINFO_PB_H', true).
-record('mesos.v1.MachineInfo',
        {id,                            % = 1, {msg,'mesos.v1.MachineID'}
         mode,                          % = 2, {enum,'mesos.v1.MachineInfo.Mode'} (optional)
         unavailability                 % = 3, {msg,'mesos.v1.Unavailability'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.FILEINFO_PB_H').
-define('MESOS.V1.FILEINFO_PB_H', true).
-record('mesos.v1.FileInfo',
        {path,                          % = 1, string
         nlink,                         % = 2, int32 (optional)
         size,                          % = 3, uint64 (optional)
         mtime,                         % = 4, {msg,'mesos.v1.TimeInfo'} (optional)
         mode,                          % = 5, uint32 (optional)
         uid,                           % = 6, string (optional)
         gid                            % = 7, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.COMMANDINFO.URI_PB_H').
-define('MESOS.V1.COMMANDINFO.URI_PB_H', true).
-record('mesos.v1.CommandInfo.URI',
        {value,                         % = 1, string
         executable,                    % = 2, bool (optional)
         extract = true,                % = 3, bool (optional)
         cache,                         % = 4, bool (optional)
         output_file                    % = 5, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.ENVIRONMENT.VARIABLE_PB_H').
-define('MESOS.V1.ENVIRONMENT.VARIABLE_PB_H', true).
-record('mesos.v1.Environment.Variable',
        {name,                          % = 1, string
         value                          % = 2, string
        }).
-endif.

-ifndef('MESOS.V1.ENVIRONMENT_PB_H').
-define('MESOS.V1.ENVIRONMENT_PB_H', true).
-record('mesos.v1.Environment',
        {variables = []                 % = 1, [{msg,'mesos.v1.Environment.Variable'}]
        }).
-endif.

-ifndef('MESOS.V1.COMMANDINFO_PB_H').
-define('MESOS.V1.COMMANDINFO_PB_H', true).
-record('mesos.v1.CommandInfo',
        {uris = [],                     % = 1, [{msg,'mesos.v1.CommandInfo.URI'}]
         environment,                   % = 2, {msg,'mesos.v1.Environment'} (optional)
         shell = true,                  % = 6, bool (optional)
         value,                         % = 3, string (optional)
         arguments = [],                % = 7, [string]
         user                           % = 5, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.HEALTHCHECK.HTTP_PB_H').
-define('MESOS.V1.HEALTHCHECK.HTTP_PB_H', true).
-record('mesos.v1.HealthCheck.HTTP',
        {port,                          % = 1, uint32
         path = "/",                    % = 2, string (optional)
         statuses = []                  % = 4, [uint32]
        }).
-endif.

-ifndef('MESOS.V1.HEALTHCHECK_PB_H').
-define('MESOS.V1.HEALTHCHECK_PB_H', true).
-record('mesos.v1.HealthCheck',
        {http,                          % = 1, {msg,'mesos.v1.HealthCheck.HTTP'} (optional)
         delay_seconds = 15.0,          % = 2, double (optional)
         interval_seconds = 10.0,       % = 3, double (optional)
         timeout_seconds = 20.0,        % = 4, double (optional)
         consecutive_failures = 3,      % = 5, uint32 (optional)
         grace_period_seconds = 10.0,   % = 6, double (optional)
         command                        % = 7, {msg,'mesos.v1.CommandInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.EXECUTORINFO_PB_H').
-define('MESOS.V1.EXECUTORINFO_PB_H', true).
-record('mesos.v1.ExecutorInfo',
        {executor_id,                   % = 1, {msg,'mesos.v1.ExecutorID'}
         framework_id,                  % = 8, {msg,'mesos.v1.FrameworkID'} (optional)
         command,                       % = 7, {msg,'mesos.v1.CommandInfo'}
         container,                     % = 11, {msg,'mesos.v1.ContainerInfo'} (optional)
         resources = [],                % = 5, [{msg,'mesos.v1.Resource'}]
         name,                          % = 9, string (optional)
         source,                        % = 10, string (optional)
         data,                          % = 4, bytes (optional)
         discovery,                     % = 12, {msg,'mesos.v1.DiscoveryInfo'} (optional)
         shutdown_grace_period,         % = 13, {msg,'mesos.v1.DurationInfo'} (optional)
         labels                         % = 14, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.TASKINFO_PB_H').
-define('MESOS.V1.TASKINFO_PB_H', true).
-record('mesos.v1.TaskInfo',
        {name,                          % = 1, string
         task_id,                       % = 2, {msg,'mesos.v1.TaskID'}
         agent_id,                      % = 3, {msg,'mesos.v1.AgentID'}
         resources = [],                % = 4, [{msg,'mesos.v1.Resource'}]
         executor,                      % = 5, {msg,'mesos.v1.ExecutorInfo'} (optional)
         command,                       % = 7, {msg,'mesos.v1.CommandInfo'} (optional)
         container,                     % = 9, {msg,'mesos.v1.ContainerInfo'} (optional)
         health_check,                  % = 8, {msg,'mesos.v1.HealthCheck'} (optional)
         kill_policy,                   % = 12, {msg,'mesos.v1.KillPolicy'} (optional)
         data,                          % = 6, bytes (optional)
         labels,                        % = 10, {msg,'mesos.v1.Labels'} (optional)
         discovery                      % = 11, {msg,'mesos.v1.DiscoveryInfo'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION.LAUNCH_PB_H').
-define('MESOS.V1.OFFER.OPERATION.LAUNCH_PB_H', true).
-record('mesos.v1.Offer.Operation.Launch',
        {task_infos = []                % = 1, [{msg,'mesos.v1.TaskInfo'}]
        }).
-endif.

-ifndef('MESOS.V1.ICMPSTATISTICS_PB_H').
-define('MESOS.V1.ICMPSTATISTICS_PB_H', true).
-record('mesos.v1.IcmpStatistics',
        {'InMsgs',                      % = 1, int64 (optional)
         'InErrors',                    % = 2, int64 (optional)
         'InCsumErrors',                % = 3, int64 (optional)
         'InDestUnreachs',              % = 4, int64 (optional)
         'InTimeExcds',                 % = 5, int64 (optional)
         'InParmProbs',                 % = 6, int64 (optional)
         'InSrcQuenchs',                % = 7, int64 (optional)
         'InRedirects',                 % = 8, int64 (optional)
         'InEchos',                     % = 9, int64 (optional)
         'InEchoReps',                  % = 10, int64 (optional)
         'InTimestamps',                % = 11, int64 (optional)
         'InTimestampReps',             % = 12, int64 (optional)
         'InAddrMasks',                 % = 13, int64 (optional)
         'InAddrMaskReps',              % = 14, int64 (optional)
         'OutMsgs',                     % = 15, int64 (optional)
         'OutErrors',                   % = 16, int64 (optional)
         'OutDestUnreachs',             % = 17, int64 (optional)
         'OutTimeExcds',                % = 18, int64 (optional)
         'OutParmProbs',                % = 19, int64 (optional)
         'OutSrcQuenchs',               % = 20, int64 (optional)
         'OutRedirects',                % = 21, int64 (optional)
         'OutEchos',                    % = 22, int64 (optional)
         'OutEchoReps',                 % = 23, int64 (optional)
         'OutTimestamps',               % = 24, int64 (optional)
         'OutTimestampReps',            % = 25, int64 (optional)
         'OutAddrMasks',                % = 26, int64 (optional)
         'OutAddrMaskReps'              % = 27, int64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.IPSTATISTICS_PB_H').
-define('MESOS.V1.IPSTATISTICS_PB_H', true).
-record('mesos.v1.IpStatistics',
        {'Forwarding',                  % = 1, int64 (optional)
         'DefaultTTL',                  % = 2, int64 (optional)
         'InReceives',                  % = 3, int64 (optional)
         'InHdrErrors',                 % = 4, int64 (optional)
         'InAddrErrors',                % = 5, int64 (optional)
         'ForwDatagrams',               % = 6, int64 (optional)
         'InUnknownProtos',             % = 7, int64 (optional)
         'InDiscards',                  % = 8, int64 (optional)
         'InDelivers',                  % = 9, int64 (optional)
         'OutRequests',                 % = 10, int64 (optional)
         'OutDiscards',                 % = 11, int64 (optional)
         'OutNoRoutes',                 % = 12, int64 (optional)
         'ReasmTimeout',                % = 13, int64 (optional)
         'ReasmReqds',                  % = 14, int64 (optional)
         'ReasmOKs',                    % = 15, int64 (optional)
         'ReasmFails',                  % = 16, int64 (optional)
         'FragOKs',                     % = 17, int64 (optional)
         'FragFails',                   % = 18, int64 (optional)
         'FragCreates'                  % = 19, int64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.SNMPSTATISTICS_PB_H').
-define('MESOS.V1.SNMPSTATISTICS_PB_H', true).
-record('mesos.v1.SNMPStatistics',
        {ip_stats,                      % = 1, {msg,'mesos.v1.IpStatistics'} (optional)
         icmp_stats,                    % = 2, {msg,'mesos.v1.IcmpStatistics'} (optional)
         tcp_stats,                     % = 3, {msg,'mesos.v1.TcpStatistics'} (optional)
         udp_stats                      % = 4, {msg,'mesos.v1.UdpStatistics'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.TRAFFICCONTROLSTATISTICS_PB_H').
-define('MESOS.V1.TRAFFICCONTROLSTATISTICS_PB_H', true).
-record('mesos.v1.TrafficControlStatistics',
        {id,                            % = 1, string
         backlog,                       % = 2, uint64 (optional)
         bytes,                         % = 3, uint64 (optional)
         drops,                         % = 4, uint64 (optional)
         overlimits,                    % = 5, uint64 (optional)
         packets,                       % = 6, uint64 (optional)
         qlen,                          % = 7, uint64 (optional)
         ratebps,                       % = 8, uint64 (optional)
         ratepps,                       % = 9, uint64 (optional)
         requeues                       % = 10, uint64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.PERFSTATISTICS_PB_H').
-define('MESOS.V1.PERFSTATISTICS_PB_H', true).
-record('mesos.v1.PerfStatistics',
        {timestamp,                     % = 1, double
         duration,                      % = 2, double
         cycles,                        % = 3, uint64 (optional)
         stalled_cycles_frontend,       % = 4, uint64 (optional)
         stalled_cycles_backend,        % = 5, uint64 (optional)
         instructions,                  % = 6, uint64 (optional)
         cache_references,              % = 7, uint64 (optional)
         cache_misses,                  % = 8, uint64 (optional)
         branches,                      % = 9, uint64 (optional)
         branch_misses,                 % = 10, uint64 (optional)
         bus_cycles,                    % = 11, uint64 (optional)
         ref_cycles,                    % = 12, uint64 (optional)
         cpu_clock,                     % = 13, double (optional)
         task_clock,                    % = 14, double (optional)
         page_faults,                   % = 15, uint64 (optional)
         minor_faults,                  % = 16, uint64 (optional)
         major_faults,                  % = 17, uint64 (optional)
         context_switches,              % = 18, uint64 (optional)
         cpu_migrations,                % = 19, uint64 (optional)
         alignment_faults,              % = 20, uint64 (optional)
         emulation_faults,              % = 21, uint64 (optional)
         l1_dcache_loads,               % = 22, uint64 (optional)
         l1_dcache_load_misses,         % = 23, uint64 (optional)
         l1_dcache_stores,              % = 24, uint64 (optional)
         l1_dcache_store_misses,        % = 25, uint64 (optional)
         l1_dcache_prefetches,          % = 26, uint64 (optional)
         l1_dcache_prefetch_misses,     % = 27, uint64 (optional)
         l1_icache_loads,               % = 28, uint64 (optional)
         l1_icache_load_misses,         % = 29, uint64 (optional)
         l1_icache_prefetches,          % = 30, uint64 (optional)
         l1_icache_prefetch_misses,     % = 31, uint64 (optional)
         llc_loads,                     % = 32, uint64 (optional)
         llc_load_misses,               % = 33, uint64 (optional)
         llc_stores,                    % = 34, uint64 (optional)
         llc_store_misses,              % = 35, uint64 (optional)
         llc_prefetches,                % = 36, uint64 (optional)
         llc_prefetch_misses,           % = 37, uint64 (optional)
         dtlb_loads,                    % = 38, uint64 (optional)
         dtlb_load_misses,              % = 39, uint64 (optional)
         dtlb_stores,                   % = 40, uint64 (optional)
         dtlb_store_misses,             % = 41, uint64 (optional)
         dtlb_prefetches,               % = 42, uint64 (optional)
         dtlb_prefetch_misses,          % = 43, uint64 (optional)
         itlb_loads,                    % = 44, uint64 (optional)
         itlb_load_misses,              % = 45, uint64 (optional)
         branch_loads,                  % = 46, uint64 (optional)
         branch_load_misses,            % = 47, uint64 (optional)
         node_loads,                    % = 48, uint64 (optional)
         node_load_misses,              % = 49, uint64 (optional)
         node_stores,                   % = 50, uint64 (optional)
         node_store_misses,             % = 51, uint64 (optional)
         node_prefetches,               % = 52, uint64 (optional)
         node_prefetch_misses           % = 53, uint64 (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCESTATISTICS_PB_H').
-define('MESOS.V1.RESOURCESTATISTICS_PB_H', true).
-record('mesos.v1.ResourceStatistics',
        {timestamp,                     % = 1, double
         processes,                     % = 30, uint32 (optional)
         threads,                       % = 31, uint32 (optional)
         cpus_user_time_secs,           % = 2, double (optional)
         cpus_system_time_secs,         % = 3, double (optional)
         cpus_limit,                    % = 4, double (optional)
         cpus_nr_periods,               % = 7, uint32 (optional)
         cpus_nr_throttled,             % = 8, uint32 (optional)
         cpus_throttled_time_secs,      % = 9, double (optional)
         mem_total_bytes,               % = 36, uint64 (optional)
         mem_total_memsw_bytes,         % = 37, uint64 (optional)
         mem_limit_bytes,               % = 6, uint64 (optional)
         mem_soft_limit_bytes,          % = 38, uint64 (optional)
         mem_file_bytes,                % = 10, uint64 (optional)
         mem_anon_bytes,                % = 11, uint64 (optional)
         mem_cache_bytes,               % = 39, uint64 (optional)
         mem_rss_bytes,                 % = 5, uint64 (optional)
         mem_mapped_file_bytes,         % = 12, uint64 (optional)
         mem_swap_bytes,                % = 40, uint64 (optional)
         mem_unevictable_bytes,         % = 41, uint64 (optional)
         mem_low_pressure_counter,      % = 32, uint64 (optional)
         mem_medium_pressure_counter,   % = 33, uint64 (optional)
         mem_critical_pressure_counter, % = 34, uint64 (optional)
         disk_limit_bytes,              % = 26, uint64 (optional)
         disk_used_bytes,               % = 27, uint64 (optional)
         perf,                          % = 13, {msg,'mesos.v1.PerfStatistics'} (optional)
         net_rx_packets,                % = 14, uint64 (optional)
         net_rx_bytes,                  % = 15, uint64 (optional)
         net_rx_errors,                 % = 16, uint64 (optional)
         net_rx_dropped,                % = 17, uint64 (optional)
         net_tx_packets,                % = 18, uint64 (optional)
         net_tx_bytes,                  % = 19, uint64 (optional)
         net_tx_errors,                 % = 20, uint64 (optional)
         net_tx_dropped,                % = 21, uint64 (optional)
         net_tcp_rtt_microsecs_p50,     % = 22, double (optional)
         net_tcp_rtt_microsecs_p90,     % = 23, double (optional)
         net_tcp_rtt_microsecs_p95,     % = 24, double (optional)
         net_tcp_rtt_microsecs_p99,     % = 25, double (optional)
         net_tcp_active_connections,    % = 28, double (optional)
         net_tcp_time_wait_connections, % = 29, double (optional)
         net_traffic_control_statistics = [], % = 35, [{msg,'mesos.v1.TrafficControlStatistics'}]
         net_snmp_statistics            % = 42, {msg,'mesos.v1.SNMPStatistics'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CREDENTIALS_PB_H').
-define('MESOS.V1.CREDENTIALS_PB_H', true).
-record('mesos.v1.Credentials',
        {credentials = []               % = 1, [{msg,'mesos.v1.Credential'}]
        }).
-endif.

-ifndef('MESOS.V1.RESOURCEUSAGE.EXECUTOR.TASK_PB_H').
-define('MESOS.V1.RESOURCEUSAGE.EXECUTOR.TASK_PB_H', true).
-record('mesos.v1.ResourceUsage.Executor.Task',
        {name,                          % = 1, string
         id,                            % = 2, {msg,'mesos.v1.TaskID'}
         resources = [],                % = 3, [{msg,'mesos.v1.Resource'}]
         labels                         % = 4, {msg,'mesos.v1.Labels'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.CONTAINERID_PB_H').
-define('MESOS.V1.CONTAINERID_PB_H', true).
-record('mesos.v1.ContainerID',
        {value                          % = 1, string
        }).
-endif.

-ifndef('MESOS.V1.RESOURCEUSAGE.EXECUTOR_PB_H').
-define('MESOS.V1.RESOURCEUSAGE.EXECUTOR_PB_H', true).
-record('mesos.v1.ResourceUsage.Executor',
        {executor_info,                 % = 1, {msg,'mesos.v1.ExecutorInfo'}
         allocated = [],                % = 2, [{msg,'mesos.v1.Resource'}]
         statistics,                    % = 3, {msg,'mesos.v1.ResourceStatistics'} (optional)
         container_id,                  % = 4, {msg,'mesos.v1.ContainerID'}
         tasks = []                     % = 5, [{msg,'mesos.v1.ResourceUsage.Executor.Task'}]
        }).
-endif.

-ifndef('MESOS.V1.WEIGHTINFO_PB_H').
-define('MESOS.V1.WEIGHTINFO_PB_H', true).
-record('mesos.v1.WeightInfo',
        {weight,                        % = 1, double
         role                           % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION.CREATE_PB_H').
-define('MESOS.V1.OFFER.OPERATION.CREATE_PB_H', true).
-record('mesos.v1.Offer.Operation.Create',
        {volumes = []                   % = 1, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION.RESERVE_PB_H').
-define('MESOS.V1.OFFER.OPERATION.RESERVE_PB_H', true).
-record('mesos.v1.Offer.Operation.Reserve',
        {resources = []                 % = 1, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.OFFER.OPERATION_PB_H').
-define('MESOS.V1.OFFER.OPERATION_PB_H', true).
-record('mesos.v1.Offer.Operation',
        {type,                          % = 1, {enum,'mesos.v1.Offer.Operation.Type'}
         launch,                        % = 2, {msg,'mesos.v1.Offer.Operation.Launch'} (optional)
         reserve,                       % = 3, {msg,'mesos.v1.Offer.Operation.Reserve'} (optional)
         unreserve,                     % = 4, {msg,'mesos.v1.Offer.Operation.Unreserve'} (optional)
         create,                        % = 5, {msg,'mesos.v1.Offer.Operation.Create'} (optional)
         destroy                        % = 6, {msg,'mesos.v1.Offer.Operation.Destroy'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.FLAG_PB_H').
-define('MESOS.V1.FLAG_PB_H', true).
-record('mesos.v1.Flag',
        {name,                          % = 1, string
         value                          % = 2, string (optional)
        }).
-endif.

-ifndef('MESOS.V1.FILTERS_PB_H').
-define('MESOS.V1.FILTERS_PB_H', true).
-record('mesos.v1.Filters',
        {refuse_seconds = 5.0           % = 1, double (optional)
        }).
-endif.

-ifndef('MESOS.V1.INVERSEOFFER_PB_H').
-define('MESOS.V1.INVERSEOFFER_PB_H', true).
-record('mesos.v1.InverseOffer',
        {id,                            % = 1, {msg,'mesos.v1.OfferID'}
         url,                           % = 2, {msg,'mesos.v1.URL'} (optional)
         framework_id,                  % = 3, {msg,'mesos.v1.FrameworkID'}
         agent_id,                      % = 4, {msg,'mesos.v1.AgentID'} (optional)
         unavailability,                % = 5, {msg,'mesos.v1.Unavailability'}
         resources = []                 % = 6, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.MASTERINFO_PB_H').
-define('MESOS.V1.MASTERINFO_PB_H', true).
-record('mesos.v1.MasterInfo',
        {id,                            % = 1, string
         ip,                            % = 2, uint32
         port = 5050,                   % = 3, uint32
         pid,                           % = 4, string (optional)
         hostname,                      % = 5, string (optional)
         version,                       % = 6, string (optional)
         address                        % = 7, {msg,'mesos.v1.Address'} (optional)
        }).
-endif.

-ifndef('MESOS.V1.RESOURCEUSAGE_PB_H').
-define('MESOS.V1.RESOURCEUSAGE_PB_H', true).
-record('mesos.v1.ResourceUsage',
        {executors = [],                % = 1, [{msg,'mesos.v1.ResourceUsage.Executor'}]
         total = []                     % = 2, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.ROLE_PB_H').
-define('MESOS.V1.ROLE_PB_H', true).
-record('mesos.v1.Role',
        {name,                          % = 1, string
         weight,                        % = 2, double
         frameworks = [],               % = 3, [{msg,'mesos.v1.FrameworkID'}]
         resources = []                 % = 4, [{msg,'mesos.v1.Resource'}]
        }).
-endif.

-ifndef('MESOS.V1.VALUE_PB_H').
-define('MESOS.V1.VALUE_PB_H', true).
-record('mesos.v1.Value',
        {type,                          % = 1, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 2, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 3, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 4, {msg,'mesos.v1.Value.Set'} (optional)
         text                           % = 5, {msg,'mesos.v1.Value.Text'} (optional)
        }).
-endif.

-endif.
